<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>计算跨年两日期相隔天数</title>
    <url>/posts/5775/</url>
    <content><![CDATA[<blockquote>
<p>题目来自 10/5 switch 语句讲解<br>该程序目前还<strong>不能</strong>进行同年计算，后期会进行更新</p>
</blockquote>
<span id="more"></span>
<h1 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h1><p>首先面对这个题目，要对改题目进行分析<br>【跨年】、【相隔天数】两个关键词</p>
<ul>
<li>跨年<br>两年相隔年数我们可以这样计算 <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">year_2 - year_1 - 1</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>举例<br>  2021/10/8 与 2022/1/1 两年间间隔便为 0<br>图片示例<br><img data-src="https://s.pc.qq.com/tousu/img/20211008/8359157_1633681655.jpg" alt="_1"></li>
</ul>
</li>
<li>相隔天数 (count)<br>上面我们计算了两年间的间隔，接下来计算相隔天数<br>计算相隔天数相对较麻烦，首先需要判断<strong>年份 1 到年底的天数</strong>，<strong>年份二月初到设置的日期天数</strong><br>还要进行判断两年之间间隔了几个闰年和平年 <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">年份1到年底的天数 + 年份二月初到设置的日期天数 + n * 闰年 + n * 平年</span><br><span class="line">（storage_1）				（storage_2）</span><br></pre></td></tr></tbody></table></figure></li>
<li>相隔年数 &lt; 4<br>  我采用的方法是，使用 <strong>for</strong> 语句进行循环判断，对 year_1 ++，判断是否为<strong>闰年</strong>，若是则 + 366, 反之 365，直到 year_1 == year_2。最后加上 storage_1 和 storage_2。</li>
<li>相隔年数 &gt;= 4<br>  我采用的是<strong>循环组</strong>的思想，首先我们知道，<strong>每 4 年</strong>出现一次闰年，这样我们<strong>每四年</strong>就是一个<strong>循环组</strong>，一个<strong>循环组</strong> (Group)，有 <strong>1 个闰年</strong> (Leap) 和 <strong>3 个平年</strong> (Average)，总共是 <strong>1461</strong> 天。<br>之后我们对相隔年数进行 / 4, 和 % 4 处理 <figure class="highlight ini"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">cycle</span> = count / <span class="number">4</span><span class="comment">;			//几个循环组</span></span><br><span class="line"><span class="attr">remain</span> = count % <span class="number">4</span><span class="comment">;			 //余数</span></span><br></pre></td></tr></tbody></table></figure>
接下来计算天数<div class="note warning"><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p><strong>Warning</strong> 余数的处理，不只是简单的用 <em>remain</em> * Average<br>         下面的处理方法可以自行尝试<br>         若 <em>year_2</em> 是平年则 remain * Average<br>         若 <em>year_2</em> 是闰年则 (remain - 1) * Average + Leap *(remain - 1 要大于 0，若为 0 则只加 Leap 即可)
    </p>
</div>
最后加上 cycle * Group 和 storage_1 + storage_2。</li>
</ul>
<h1 id="代码分层解析"><a href="#代码分层解析" class="headerlink" title="代码分层解析"></a>代码分层解析</h1><ul>
<li><p>初始设置</p>
<p>  首先我们先创建一些常量</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Otsuki 31			<span class="comment">// 大月31天</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Satsuki 30			<span class="comment">//小月30天</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Group 1461			<span class="comment">//1闰年+3平年</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Leap 366			<span class="comment">//闰年 366天</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Average 365			<span class="comment">//平年 365天</span></span></span><br></pre></td></tr></tbody></table></figure>
<p> 随后定义必要的变量</p>
<figure class="highlight apache"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attribute">int</span> year_<span class="number">1</span>, mouth_<span class="number">1</span>, day_<span class="number">1</span>, total_<span class="number">1</span>, fab_<span class="number">1</span>;		// 年<span class="number">1</span> 月<span class="number">1</span> 日<span class="number">1</span> 本年总天数 <span class="number">2</span>月天数 </span><br><span class="line"><span class="attribute">int</span> year_<span class="number">2</span>, mouth_<span class="number">2</span>, day_<span class="number">2</span>, total_<span class="number">2</span>, fab_<span class="number">2</span>;		// 年<span class="number">2</span> 月<span class="number">2</span> 日<span class="number">2</span> 本年总天数 <span class="number">2</span>月天数 </span><br><span class="line"><span class="attribute">int</span> storage_<span class="number">1</span> = <span class="number">0</span>, storage_<span class="number">2</span> = <span class="number">0</span>;				//记录第一年到年底天数，第二年到年初天数</span><br><span class="line"><span class="attribute">long</span> count, result;								// 两年间隔  间隔天数 </span><br><span class="line"><span class="attribute">int</span> cycle = <span class="number">0</span>, remain = <span class="number">0</span>;						//每<span class="number">4</span>年循环组  余数 </span><br></pre></td></tr></tbody></table></figure></li>
<li><p>程序主体</p>
<p>   然后使用 <strong>printf</strong> 语句 和 <strong>scanf</strong> 语句 提示而且让用户去输入两个日期</p>
<figure class="highlight lisp"><table><tbody><tr><td class="code"><pre><span class="line">printf(<span class="string">"Please in put the first date:(Format:Year/Mouth/Day)\n"</span>)<span class="comment">;</span></span><br><span class="line">scanf(<span class="string">"%d/%d/%d"</span>, <span class="symbol">&amp;year_1</span>, <span class="symbol">&amp;mouth_1</span>, <span class="symbol">&amp;day_1</span>)<span class="comment">;</span></span><br><span class="line">getchar()<span class="comment">;</span></span><br><span class="line">printf(<span class="string">"Please in put the second data:(Format:Year/Mouth/Day)\n"</span>)<span class="comment">;</span></span><br><span class="line">scanf(<span class="string">"%d/%d/%d"</span>, <span class="symbol">&amp;year_2</span>, <span class="symbol">&amp;mouth_2</span>, <span class="symbol">&amp;day_2</span>)<span class="comment">;</span></span><br></pre></td></tr></tbody></table></figure>
<p>   之后判断 <strong>year_1</strong> 和 <strong>year_2</strong> 是否为闰年，并将相关数据存进相关变量中</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//判断年1是否为闰年 </span></span><br><span class="line">    <span class="keyword">if</span> (year_1 % <span class="number">400</span> == <span class="number">0</span> || year_1 % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year_1 % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        fab_1 = <span class="number">29</span>;</span><br><span class="line">        total_1 = <span class="number">366</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        fab_1 = <span class="number">28</span>;</span><br><span class="line">        total_1 = <span class="number">365</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断年2是否为闰年 </span></span><br><span class="line">    <span class="keyword">if</span> (year_2 % <span class="number">400</span> == <span class="number">0</span> || year_2 % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year_2 % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        fab_2 = <span class="number">29</span>;</span><br><span class="line">        total_2 = <span class="number">366</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        fab_2 = <span class="number">28</span>;</span><br><span class="line">        total_2 = <span class="number">365</span>;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure>
<p>   使用 <strong>switch</strong> 语句进行计算<strong>年份 1 到年底的天数</strong>，<strong>年份二月初到设置的日期天数</strong></p>
<blockquote>
<p><strong>switch</strong> 语句语法</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">&gt;<span class="built_in"><span class="keyword">switch</span></span>(整型变量)</span><br><span class="line">&gt;{</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:....</span><br><span class="line">deafult:...</span><br><span class="line">&gt;}</span><br></pre></td></tr></tbody></table></figure>
</blockquote>
   <figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//判断到年底剩余时间 </span></span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (mouth_1)</span><br><span class="line">    {</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        storage_1 = storage_1 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        storage_1 = storage_1 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        storage_1 = storage_1 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        storage_1 = storage_1 + fab_1;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        storage_1 = storage_1 + day_1;</span><br><span class="line">        storage_1 = total_1 - storage_1;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//判断到年初有几天 </span></span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (mouth_2)</span><br><span class="line">    {</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        storage_2 = storage_2 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        storage_2 = storage_2 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        storage_2 = storage_2 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        storage_2 = storage_2 + fab_2;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        storage_2 = storage_2 + day_2;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure>
<p>   下面是 **count &lt; 4 ** 情况</p>
   <figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (count = year_2 - year_1 - <span class="number">1</span>; count &lt; <span class="number">4</span>; year_1++)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (year_1 == year_2)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (year_1 % <span class="number">400</span> == <span class="number">0</span> || year_1 % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year_1 % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        result = result + Leap;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        result = result + Average;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<p>   <strong>count &gt;= 4</strong></p>
   <figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (count &gt;= <span class="number">4</span>)</span><br><span class="line">   {</span><br><span class="line">       cycle = count / <span class="number">4</span>;</span><br><span class="line">       remain = count % <span class="number">4</span>;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"%d,%d,%d,%d\n"</span>, cycle, remain, storage_1, storage_2);</span><br><span class="line">       <span class="keyword">if</span> (year_2 % <span class="number">400</span> == <span class="number">0</span> || year_2 % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year_2 % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">       {</span><br><span class="line">           <span class="keyword">if</span> (remain - <span class="number">1</span> &gt; <span class="number">0</span>)</span><br><span class="line">           {</span><br><span class="line">               result = cycle * Group + (remain - <span class="number">1</span>) * Average + Leap;</span><br><span class="line">           }</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           {</span><br><span class="line">               result = cycle * Group + Leap;</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       {</span><br><span class="line">           result = cycle * Group + remain * Average;</span><br><span class="line">       }</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure>
<p>   最后加上<strong>年份 1 到年底的天数</strong>，<strong>年份二月初到设置的日期天数</strong>且输出结果</p>
   <figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">result = result + storage_1 + storage_2;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%ld days apart"</span>, result);</span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><div class="note warning"><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p><strong>Warning</strong> 本代码使用了<em>子函数</em> , 且在 <em>vs 2019</em> 环境下进行编译运行</p>
</div>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_INTERNAL_SCANF_LEGACY_WIDE_SPECIFIERS  <span class="comment">//dev C++请删除该行</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Otsuki 31</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Satsuki 30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Group 1461<span class="comment">//1闰年+3平年</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Leap 366</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Average 365</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Calculate the time difference between two dates."</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">operation</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> year_1, mouth_1, day_1, total_1, fab_1;</span><br><span class="line">    <span class="comment">// 年1 月1 日1 本年总天数 2月天数 </span></span><br><span class="line">    <span class="keyword">int</span> year_2, mouth_2, day_2, total_2, fab_2;</span><br><span class="line">    <span class="comment">// 年2 月2 日2 本年总天数 2月天数 </span></span><br><span class="line">    <span class="keyword">int</span> storage_1 = <span class="number">0</span>, storage_2 = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//记录第一年到年底天数，第二年到年初天数</span></span><br><span class="line">    <span class="keyword">long</span> count, result;</span><br><span class="line">    <span class="comment">// 两年间隔  间隔天数 </span></span><br><span class="line">    <span class="keyword">int</span> cycle = <span class="number">0</span>, remain = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//每4年循环组  余数 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please in put the first date:(Format:Year/Mouth/Day)\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d/%d/%d"</span>, &amp;year_1, &amp;mouth_1, &amp;day_1);</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please in put the second data:(Format:Year/Mouth/Day)\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d/%d/%d"</span>, &amp;year_2, &amp;mouth_2, &amp;day_2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断年1是否为闰年 </span></span><br><span class="line">    <span class="keyword">if</span> (year_1 % <span class="number">400</span> == <span class="number">0</span> || year_1 % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year_1 % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        fab_1 = <span class="number">29</span>;</span><br><span class="line">        total_1 = <span class="number">366</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        fab_1 = <span class="number">28</span>;</span><br><span class="line">        total_1 = <span class="number">365</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断年2是否为闰年 </span></span><br><span class="line">    <span class="keyword">if</span> (year_2 % <span class="number">400</span> == <span class="number">0</span> || year_2 % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year_2 % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        fab_2 = <span class="number">29</span>;</span><br><span class="line">        total_2 = <span class="number">366</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        fab_2 = <span class="number">28</span>;</span><br><span class="line">        total_2 = <span class="number">365</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//判断到年底剩余时间 </span></span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (mouth_1)</span><br><span class="line">    {</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        storage_1 = storage_1 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        storage_1 = storage_1 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        storage_1 = storage_1 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        storage_1 = storage_1 + fab_1;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        storage_1 = storage_1 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        storage_1 = storage_1 + day_1;</span><br><span class="line">        storage_1 = total_1 - storage_1;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//判断到年初有几天 </span></span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (mouth_2)</span><br><span class="line">    {</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        storage_2 = storage_2 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        storage_2 = storage_2 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        storage_2 = storage_2 + Satsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        storage_2 = storage_2 + fab_2;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        storage_2 = storage_2 + Otsuki;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        storage_2 = storage_2 + day_2;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (count = year_2 - year_1 - <span class="number">1</span>; count &lt; <span class="number">4</span>; year_1++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (year_1 == year_2)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (year_1 % <span class="number">400</span> == <span class="number">0</span> || year_1 % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year_1 % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            result = result + Leap;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            result = result + Average;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (count &gt;= <span class="number">4</span>)</span><br><span class="line">    {</span><br><span class="line">        cycle = count / <span class="number">4</span>;</span><br><span class="line">        remain = count % <span class="number">4</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d,%d,%d,%d\n"</span>, cycle, remain, storage_1, storage_2);</span><br><span class="line">        <span class="keyword">if</span> (year_2 % <span class="number">400</span> == <span class="number">0</span> || year_2 % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year_2 % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (remain - <span class="number">1</span> &gt; <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                result = cycle * Group + (remain - <span class="number">1</span>) * Average + Leap;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                result = cycle * Group + Leap;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            result = cycle * Group + remain * Average;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    result = result + storage_1 + storage_2;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%ld days apart"</span>, result);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="built_in">menu</span>();</span><br><span class="line">	<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="built_in">operation</span>();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}    </span><br></pre></td></tr></tbody></table></figure>

<h1 id="最后的话"><a href="#最后的话" class="headerlink" title="最后的话"></a>最后的话</h1><p> 首次写这种类型的博客，排版和解释可能不是很好，希望各位可以积极评论，留下你们的建议</p>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>数组类比结构体</title>
    <url>/posts/60589/</url>
    <content><![CDATA[<blockquote>
<p>个人对于一个解题方法的简单总结，以下皆为个人观点</p>
</blockquote>
<span id="more"></span>

<p>本总结在散步时无聊总结的，主要是对之前在 <strong>PTA</strong> 所作的题和网上所查的其他做法的一个总结与反思。</p>
<p>PTA 原题大概为统计一段数中每个数的数量。</p>
<p>起初我对本题的第一想法是使用结构体进行解决。结构体中包括两个 <code>int</code> 型的变量 <code>D</code> 和 <code>M</code>，分别用来储存<strong>数</strong>与<strong>该数出现的次数</strong>，但是在后来查看其他人做法时，发现采用了数组的方法，散步时，我便进行反思，这个数组用法本质不就是一种结构体吗。</p>
<p>在所查的方法中，他们定义了一个 <code>num[10]</code> 的数组，用来储存每个数出现的次数。其中 <code>10</code> 正好对应了要统计的 10 个数 <code>0</code> <code>1</code> <code>2</code> <code>3</code> <code>4</code> <code>5</code> <code>6</code> <code>7</code> <code>8</code> <code>9</code>。仔细观察还会发现，我们所统计的数，可以正好与数组的下标进行对应，就类似与我所创建的结构体中的 <code>D</code>，同时该数组 <code>num[i]</code> 就类似与 <code>M</code>。综上来看，这个数组就类似与一个可以储存两种数据的结构体。</p>
<p>这时，可能会有其他问题，既然如此那他就只能统计数字吗。</p>
<p>其实并非如此，也可以对字符进行统计，因为字符可以转换为 <strong>ASCII 码</strong>。比如我想要统计一篇文章中的各个小写字母的数量，那我们便可以定义一个 <code>num[24]</code> 的数组。</p>
<p>那我们如何做到各小写字母与数组下标对应呢，我们去让 <code>a</code> 与下标 <code>0</code> 对应，<code>z</code> 与下标 <code>23</code> 对应，这样的话我们就可以让所有小写字母的 <strong>ASCII 码</strong> 减去 <code>a</code> 的 <strong>ASCII 码</strong>。</p>
<p>例如</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">'a'</span> - <span class="string">'a'</span> = <span class="number">0</span></span><br><span class="line"><span class="string">'b'</span> - <span class="string">'a'</span> = <span class="number">1</span></span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure>

<p>这个方法的对于统计连续的数据十分方便，并且与结构体相比可以节省部分空间，但是处理非连续的数据，可能就会造成空间的浪费或者无法处理。</p>
<p>总之，在处理问题上也是一种不错的解决方法。</p>
]]></content>
  </entry>
  <entry>
    <title>新的诞生</title>
    <url>/posts/50110/</url>
    <content><![CDATA[<h1 id="本博客的诞生"><a href="#本博客的诞生" class="headerlink" title="本博客的诞生"></a>本博客的诞生</h1><p>这个博客说实话，多少有些来之不易，经过两天的坚持不懈、四处摸索，也是完成了这个博客的搭建</p>
<span id="more"></span>

<ul>
<li><strong>你们可能会问道，为什么要搭建这个博客</strong></li>
</ul>
<p> &lt;-&gt; 一开始的决定，本是打算把自己初学的 C 相关的代码放在博客上，但后来在搭建的过程中，对博客有了些了解，便决定将这个博客作为自己分享自己学习的过程与学习成果的平台。</p>
<ul>
<li><strong>未来对这个博客有什么打算</strong></li>
</ul>
<p> &lt;-&gt; 自己会坚持把他维护下去，虽然技术不好，但也会尽全力</p>
<p> &lt;-&gt; 有了新的学习成功也会尽快分享到这个博客</p>
<ul>
<li><strong>最后有什么想说的吗</strong></li>
</ul>
<p> &lt;-&gt; 不仅对这个博客，也是对自己所说</p>
<pre><code>就像是初学代码时第一个程序那样
</code></pre>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">"Hello World"</span><br></pre></td></tr></tbody></table></figure>]]></content>
      <categories>
        <category>欢迎</category>
      </categories>
      <tags>
        <tag>欢迎</tag>
      </tags>
  </entry>
  <entry>
    <title>猴子选大王</title>
    <url>/posts/50761/</url>
    <content><![CDATA[<blockquote>
<p>本题来自 c 语言期末考试</p>
</blockquote>
<span id="more"></span>

<div class="note warning"><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p><strong>Warning</strong> 解法不唯一，仅讲述自己的想法</p>
</div>


<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>一群猴子要选新猴王。新猴王的选择方法是：让 N 只候选猴子围成一圈，从某位置起顺序编号为 1~N 号。从第 1 号开始报数，从 1 报到 m，凡报到 m 的猴子即退出圈子，接着又从紧邻的上一只猴子开始逆序报数，从 1 报到 k，凡报到 k 的猴子即退出圈子，接着冲紧邻的下一只猴子开始正序报数。如此不断循环，最后剩下的一只猴子就选为猴王。请问是原来第几号猴子当选猴王？</p>
<h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>在一行分别输入 n,m,k（≤200）。</p>
<h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>在一行中输出当选猴王的编号。</p>
<h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">8</span> <span class="number">2</span> <span class="number">5</span></span><br><span class="line">结尾无空行</span><br></pre></td></tr></tbody></table></figure>

<h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">结尾无空行</span><br></pre></td></tr></tbody></table></figure>

<h1 id="问题解析"><a href="#问题解析" class="headerlink" title="问题解析"></a>问题解析</h1><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS		<span class="comment">//Dev C++ 可以将本行删除</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Max 200						<span class="comment">//定义最大的值</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintArr</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n)</span>		<span class="comment">//用于打印最终结果</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">	{</span><br><span class="line">		<span class="keyword">if</span> (arr[i] == <span class="number">0</span>)			<span class="comment">//如果数组中数值为0，则继续循环，直到输出</span></span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d"</span>, arr[i]);</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">King</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> num, <span class="keyword">int</span> pos_1, <span class="keyword">int</span> pos_2, <span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="keyword">if</span> (num &gt; <span class="number">1</span>)</span><br><span class="line">	{</span><br><span class="line">		<span class="keyword">while</span> (num &gt; <span class="number">1</span>)				<span class="comment">//如果猴子数大于1则进行正循环</span></span><br><span class="line">		{</span><br><span class="line">			<span class="keyword">while</span> (arr[pos_2] == <span class="number">0</span> || pos_2 &gt;= n)	<span class="comment">//如果猴子已经退出或下标超出猴子总数则进行循环</span></span><br><span class="line">			{</span><br><span class="line">				<span class="keyword">if</span> (pos_2 &gt;= n)		<span class="comment">//下标超出猴子总数，下标移至开头</span></span><br><span class="line">				{</span><br><span class="line">					pos_2 = <span class="number">0</span>;</span><br><span class="line">				}</span><br><span class="line">				<span class="keyword">else</span>				<span class="comment">//猴子退出，下标移向下一位</span></span><br><span class="line">				{</span><br><span class="line">					pos_2++;</span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">			<span class="keyword">if</span> (pos_1 % m != <span class="number">0</span>)		<span class="comment">//猴子正序报数未到m，所报数+1，下标移向下一位</span></span><br><span class="line">			{</span><br><span class="line">				pos_1++;</span><br><span class="line">				pos_2++;</span><br><span class="line">			}</span><br><span class="line">			<span class="keyword">else</span>					<span class="comment">//猴子正序报数到m，所报数初始化为1，猴子退出，下标移向上一位，猴子数-1</span></span><br><span class="line">			{</span><br><span class="line">				pos_1 = <span class="number">1</span>;</span><br><span class="line">				arr[pos_2--] = <span class="number">0</span>;</span><br><span class="line">				num--;</span><br><span class="line">				<span class="keyword">break</span>;				<span class="comment">//跳出正序报数</span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">		<span class="keyword">while</span> (num &gt; <span class="number">1</span>)				<span class="comment">//如果猴子数大于1则进行逆循环</span></span><br><span class="line">		{</span><br><span class="line">			<span class="keyword">while</span> (arr[pos_2] == <span class="number">0</span> || pos_2 &lt; <span class="number">0</span>)	<span class="comment">//如果猴子已经退出，或下标&gt;0则进行循环</span></span><br><span class="line">			{</span><br><span class="line">				<span class="keyword">if</span> (pos_2 &lt; <span class="number">0</span>)		<span class="comment">//下标小于0，下标移至末尾</span></span><br><span class="line">				{</span><br><span class="line">					pos_2 = n - <span class="number">1</span>;</span><br><span class="line">				}</span><br><span class="line">				<span class="keyword">else</span>				<span class="comment">//猴子退出，下标移向上一位</span></span><br><span class="line">				{</span><br><span class="line">					pos_2--;</span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">			<span class="keyword">if</span> (pos_1 % k != <span class="number">0</span>)		<span class="comment">//猴子逆序报数未到k，所报数+1，下标移向上一位</span></span><br><span class="line">			{</span><br><span class="line">				pos_1++;</span><br><span class="line">				pos_2--;</span><br><span class="line">			}</span><br><span class="line">			<span class="keyword">else</span>					<span class="comment">//猴子逆序报数到k，所报数初始化为1，猴子退出，下标移向下一位，猴子数-1</span></span><br><span class="line">			{</span><br><span class="line">				pos_1 = <span class="number">1</span>;</span><br><span class="line">				arr[pos_2++] = <span class="number">0</span>;</span><br><span class="line">				num--;</span><br><span class="line">				<span class="keyword">break</span>;				<span class="comment">//跳出逆序报数</span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">		<span class="built_in">King</span>(arr, num, pos_1, pos_2, n, m, k);	<span class="comment">//递归寻找大王</span></span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	{</span><br><span class="line">		<span class="built_in">PrintArr</span>(arr, n);						<span class="comment">//如果只剩一个猴子，输出结果</span></span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="keyword">int</span> arr[Max] = { <span class="number">0</span> };						<span class="comment">//用于存放猴子编号的数组</span></span><br><span class="line">	<span class="keyword">int</span> n, m, k;								<span class="comment">//猴子数，正序报数截至，逆序报数截至</span></span><br><span class="line">	<span class="keyword">int</span> pos_1, pos_2;							<span class="comment">//所报数，编号数组下标</span></span><br><span class="line">	<span class="keyword">int</span> num;									<span class="comment">//猴子所剩数</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &amp;n, &amp;m, &amp;k);</span><br><span class="line">	<span class="keyword">if</span> (n &gt; <span class="number">1</span> &amp;&amp; n &lt; Max &amp;&amp; m &gt; <span class="number">1</span> &amp;&amp; m &lt; Max &amp;&amp; k &gt; <span class="number">1</span> &amp;&amp; k &lt; Max)</span><br><span class="line">	{</span><br><span class="line">		pos_1 = <span class="number">1</span>;</span><br><span class="line">		pos_2 = <span class="number">0</span>;</span><br><span class="line">		num = n;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)				<span class="comment">//初始化猴子编号</span></span><br><span class="line">		{</span><br><span class="line">			arr[i] = i + <span class="number">1</span>;</span><br><span class="line">		}</span><br><span class="line">		<span class="built_in">King</span>(arr, num, pos_1, pos_2, n, m, k);	<span class="comment">//进行选大王</span></span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
  </entry>
  <entry>
    <title>日历生成</title>
    <url>/posts/10092/</url>
    <content><![CDATA[<p>一个简单的日历生成</p>
<span id="more"></span>

<p>今天属实是无聊，突发奇想想写个日历生成器，一开始主要是感觉不会太难，上手写才发现自己走了不少弯路，一直在绕圈圈（😓</p>
<p>在写这个日历生成器一共想了想了 3 中办法，也是十分曲折的把他写完了</p>
<p>首先我想到的是去用 <code>time.h</code> 中的 <code>time()</code> 函数去获取当前的时间戳，然后通过时间戳去换算当前的日期，然后获取当前是周几，之后与输入年份的 1 月 1 日进行计算，计算二者相差天数，得到输入年份 1 月 1 日为周几，再进行日历生成</p>
<blockquote>
<p><strong><a href="https://baike.baidu.com/item/%E6%97%B6%E9%97%B4%E6%88%B3/6439235">时间戳 - 百度百科</a></strong></p>
</blockquote>
<p>在查询相关资料的时候发现了 <code>time.h</code> 中有自带转换时间戳的函数 <code>localtime()</code></p>
<ul>
<li>描述</li>
</ul>
<p>C 库函数 <code>struct tm *localtime(const time_t *timer)</code> 使用 <code>timer</code> 的值来填充 <code>tm</code> 结构。<code>timer</code> 的值被分解为 tm 结构，并用本地时区表示。</p>
<ul>
<li>声明</li>
</ul>
<p>下面是 <code>localtime()</code> 函数的声明。</p>
<p><code>struct tm *localtime(const time_t *timer)</code></p>
<ul>
<li>参数</li>
</ul>
<p><code>timer</code> – 这是指向表示日历时间的 <code>time_t</code> 值的指针。<br>返回值<br>该函数返回指向 <code>tm</code> 结构的指针，该结构带有被填充的时间信息。下面是 <code>tm</code> 结构的细节：</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">   <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> {</span></span><br><span class="line">  	<span class="keyword">int</span> tm_sec;         <span class="comment">/* 秒，范围从 0 到 59                */</span></span><br><span class="line">  	<span class="keyword">int</span> tm_min;         <span class="comment">/* 分，范围从 0 到 59                */</span></span><br><span class="line">  	<span class="keyword">int</span> tm_hour;        <span class="comment">/* 小时，范围从 0 到 23                */</span></span><br><span class="line">  	<span class="keyword">int</span> tm_mday;        <span class="comment">/* 一月中的第几天，范围从 1 到 31                    */</span></span><br><span class="line">  	<span class="keyword">int</span> tm_mon;         <span class="comment">/* 月份，范围从 0 到 11                */</span></span><br><span class="line">  	<span class="keyword">int</span> tm_year;        <span class="comment">/* 自 1900 起的年数                */</span></span><br><span class="line">  	<span class="keyword">int</span> tm_wday;        <span class="comment">/* 一周中的第几天，范围从 0 到 6                */</span></span><br><span class="line">  	<span class="keyword">int</span> tm_yday;        <span class="comment">/* 一年中的第几天，范围从 0 到 365                    */</span></span><br><span class="line">  	<span class="keyword">int</span> tm_isdst;       <span class="comment">/* 夏令时                        */</span>    </span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>实例</li>
</ul>
<p>下面的实例演示了 <code>localtime()</code> 函数的用法。</p>
<ul>
<li>实例 </li>
</ul>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">   <span class="keyword">time_t</span> rawtime;</span><br><span class="line">   <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> *<span class="title">info</span>;</span></span><br><span class="line">   <span class="keyword">char</span> buffer[<span class="number">80</span>];</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">time</span>( &amp;rawtime );</span><br><span class="line"> </span><br><span class="line">   info = <span class="built_in">localtime</span>( &amp;rawtime );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"当前的本地时间和日期：%s"</span>, <span class="built_in">asctime</span>(info));</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<p>让我们编译并运行上面的程序，这将产生以下结果：</p>
<pre><code>当前的本地时间和日期：Thu Aug 23 09:12:05 2012
</code></pre>
<blockquote>
<p><strong><a href="https://www.runoob.com/cprogramming/c-function-localtime.html">localtime()</a></strong></p>
</blockquote>
<p>之后还发现可以直接通过日期来获取当前为周几，用到的是 <strong>基姆拉尔森计算公式 </strong> </p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">W= (d+<span class="number">2</span>*m+<span class="number">3</span>*(m+<span class="number">1</span>)/<span class="number">5</span>+y+y/<span class="number">4</span>-y/<span class="number">100</span>+y/<span class="number">400</span>+<span class="number">1</span>)%<span class="number">7</span> </span><br></pre></td></tr></tbody></table></figure>
<div class="note warning"><pre><code>    #### 注意
    **Warning** 在公式中有个与其他公式不同的地方：
</code></pre>
<p>把一月和二月看成是上一年的十三月和十四月，例：如果是 2004-1-10 则换算成：2003-13-10 来代入公式计算。</p>
</div>


<blockquote>
<p><strong><a href="https://baike.baidu.com/item/%E5%9F%BA%E5%A7%86%E6%8B%89%E5%B0%94%E6%A3%AE%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F/713396">基姆拉尔森计算公式 - 百度百科</a></strong></p>
</blockquote>
<p>之后我居然想的是获取当前时间然后再获取当前为周几，然后再去换算输入日期为周几（想明白后发现自己太傻了）</p>
<p>之后吃饭的时候突然想到直接拿输入的年份去得当天为周几不久完了吗</p>
<p>饭后直接着手开始写了</p>
<p>写了大概 1H，也算是完成了（😓</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Otsuki 31</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Satsuki 30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LeapFeb 29</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CommonFeb 28</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Printcalender</span><span class="params">(<span class="keyword">int</span> M, <span class="keyword">int</span> leap, <span class="keyword">int</span> W)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="keyword">int</span> D = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> max;</span><br><span class="line">	<span class="keyword">int</span> size;</span><br><span class="line">	<span class="keyword">char</span>* head[] = { <span class="string">"Mon"</span>, <span class="string">"Tue"</span>, <span class="string">"Wed"</span>, <span class="string">"Thu"</span>, <span class="string">"Fri"</span>, <span class="string">"Sat"</span>, <span class="string">"Sun"</span> };</span><br><span class="line">	<span class="built_in"><span class="keyword">switch</span></span> (M)</span><br><span class="line">	{</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">		max = Otsuki;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">	<span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">		max = Satsuki;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		<span class="keyword">if</span> (leap)</span><br><span class="line">		{</span><br><span class="line">			max = LeapFeb;</span><br><span class="line">		}</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		{</span><br><span class="line">			max = CommonFeb;</span><br><span class="line">		}</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	}</span><br><span class="line">	size = (max + W) / <span class="number">7</span>;</span><br><span class="line">	<span class="keyword">if</span> ((max + W) % <span class="number">7</span>)</span><br><span class="line">	{</span><br><span class="line">		size++;</span><br><span class="line">	}</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++)</span><br><span class="line">	{</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">" %s"</span>,head[i]);</span><br><span class="line">	}</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">	{</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">7</span>; j++)</span><br><span class="line">		{</span><br><span class="line">			<span class="keyword">if</span> (j == W)</span><br><span class="line">			{</span><br><span class="line">				<span class="keyword">if</span> (D &lt;= max)</span><br><span class="line">				{</span><br><span class="line">					<span class="keyword">if</span> (W &lt; <span class="number">6</span>)</span><br><span class="line">						W = j + <span class="number">1</span>;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						W = <span class="number">0</span>;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">"%4.d"</span>, D);</span><br><span class="line">					D++;</span><br><span class="line">				}</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				{</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			{</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"    "</span>);</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">		<span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">	}</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">	<span class="keyword">if</span> (M &lt; <span class="number">12</span>)</span><br><span class="line">	{</span><br><span class="line">		M++;</span><br><span class="line">		<span class="built_in">Printcalender</span>(M, leap, W);</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Calender</span><span class="params">(<span class="keyword">int</span> year)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="keyword">int</span> W = (<span class="number">1</span> + <span class="number">2</span> * <span class="number">13</span> + <span class="number">3</span> * (<span class="number">13</span> + <span class="number">1</span>) / <span class="number">5</span> + (year - <span class="number">1</span>) + (year - <span class="number">1</span>) / <span class="number">4</span> - (year - <span class="number">1</span>) / <span class="number">100</span> + (year - <span class="number">1</span>) / <span class="number">400</span>) % <span class="number">7</span>;</span><br><span class="line">	<span class="keyword">int</span> M = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> leap;</span><br><span class="line">	<span class="keyword">if</span> (year % <span class="number">400</span> == <span class="number">0</span> || year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">	{</span><br><span class="line">		leap = <span class="number">1</span>;</span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	{</span><br><span class="line">		leap = <span class="number">0</span>;</span><br><span class="line">	}</span><br><span class="line">	<span class="built_in">Printcalender</span>(M, leap, W);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="keyword">int</span> year;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;year);</span><br><span class="line">	<span class="built_in">Calender</span>(year);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
  </entry>
</search>
